# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User implements Node {
  _id: String!
  id: String!
  name: String!
  email: String!
  phone: String!
}

interface Node {
  _id: String!
  id: String!
}

type UserPayload {
  user: User!
  token: String!
  refreshToken: String!
}

type Room implements Node {
  _id: String!
  id: String!
  title: String!
  users: [User!]!
  lastMessage: String!
}

type Chat implements Node {
  _id: String!
  id: String!
  message: String!
  ownerName: String!
  roomId: String!
}

type BasicResponse {
  message: String!
  statusCode: Float!
}

type PageInfo {
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}

type RoomsConnection {
  pageInfo: PageInfo!
  edges: [RoomEdge!]!
  statusCode: Float!
}

type RoomEdge {
  node: Room!
  cursor: String!
}

type RoomList {
  roomsConection: [String!]!
  allRooms(after: String!, first: Float!): RoomsConnection!
}

type CreatedConnectionPayload {
  basicResponse: BasicResponse!
  room: RoomEdge!
}

type Query {
  UserGraphGetInfo: User!
  UserGraphVerifyToken: UserPayload!
  RoomGraphGetAllRoom: RoomList!
}

type Mutation {
  UserGraphSignUp(input: CreateUserInput!): UserPayload!
  UserGraphSignIn(input: SignInUserInput!): UserPayload!
  RoomGraphCreateRoom(email: String!): CreatedConnectionPayload!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
  phone: String!
}

input SignInUserInput {
  email: String!
  password: String!
}
